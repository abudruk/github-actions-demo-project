{
    "any_group_can_deploy": false,
    "auto_historical_resources": false,
    "deployment_items": [
        {
            "all_environments_enabled": false,
            "allowed_os_families": null,
            "applications": null,
            "deploy_seq": 1,
            "description": "",
            "enabled_environments": [],
            "environment_selection_orchestration": null,
            "execute_in_parallel": false,
            "hostname_template": "",
            "id": "BDI-p3megoao",
            "name": "Create Ansible Host",
            "os_build": null,
            "restrict_applications": false,
            "show_on_order_form": true,
            "tier_type": "server"
        },
        {
            "action_name": "Execute Ansible Tower Template",
            "continue_on_failure": false,
            "deploy_seq": 2,
            "description": null,
            "enabled_environments": [],
            "execute_in_parallel": false,
            "id": "BDI-dalcvo2a",
            "name": "Execute Ansible Tower Template",
            "run_on_scale_up": true,
            "show_on_order_form": true,
            "tier_type": "plugin"
        }
    ],
    "description": "<p>In Ansible Tower, a Job Template is created and associated with an inventory or hosts to run against. When executing the template, it will run on all of the hosts in the associated inventory. CloudBolt will look up the inventory associated with the selected Job Template, create a host record for the new provisioned server and add it to the inventory. This is done so that any future runs of the Job Template will include the new server. CloudBolt will also execute the Job Template with an argument limiting it to only the new host. During this run, it will not execute against the entire inventory.</p>\r\n\r\n<p><b>Use Case:</b> Add host to Ansible Inventory and execute a run again ONLY that host, not the entire inventory</p>\r\n\r\n<p><b>Caveats:</b> The extra vars are currently only added to the host. Extra vars for job templates is a future add-on.</p>",
    "favorited": false,
    "icon": "ansible-tower_ID67Mva_gADA3lR_0RalofM.png",
    "id": "BP-07woy71h",
    "is_manageable": true,
    "is_orderable": true,
    "labels": [
        {
            "model_name": "serviceblueprint",
            "name": "Ansible"
        }
    ],
    "last_updated": "2022-09-29",
    "management_actions": [],
    "maximum_version_required": "",
    "minimum_version_required": "8.6",
    "name": "Ansible Tower - Execute Template",
    "resource_name_template": "",
    "resource_type": {
        "icon": "",
        "id": "RT-wl1o0b0w",
        "label": "Service",
        "lifecycle": "ACTIVE",
        "list_view_columns": [],
        "name": "service",
        "plural_label": null
    },
    "sequence": 0,
    "show_recipient_field_on_order_form": false,
    "teardown_items": [
        {
            "action_name": "Ansible Tower - Delete Host from Inventory",
            "continue_on_failure": false,
            "deploy_seq": -1,
            "description": null,
            "enabled_environments": [],
            "execute_in_parallel": false,
            "id": "BDI-5npbmnve",
            "name": "Ansible Tower - Delete Host from Inventory",
            "run_on_scale_up": true,
            "show_on_order_form": true,
            "tier_type": "teardown_plugin"
        }
    ]
}