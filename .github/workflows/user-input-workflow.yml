name: Workflow for User Input Content Item Deployment
# Controls when the action will run.
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      content_type:
        description: "Type of Content"
        required: true
        type: choice
        options:
          - blueprints
          - ui-extension-packages
          - cb-applets
          - orchestration-actions
          - recurring-jobs
          - server-actions
          - resource-actions

      # blueprint_name:
      #   description: "Name of Content"
      #   required: true

      version:
        description: "Version for Deployment"
        required: true
        type: choice
        options:
          - 2023.5.21
          - 2023.5.1
          - 2023.4.9
          - 2023.4.8

      blueprint_file_path:
        description: 'Path to the zip file'
        required: true

defaults:
  run:
    shell: bash -leo pipefail {0}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  archive-collections:
    name: Archive Collections
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      TF_IN_AUTOMATION: true

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

      - name: Checkout repository
        uses: actions/checkout@v2


      - name: List the files
        run: |
          echo "Listing Files"
          pwd
          ls
          # tree
      

      - name: Download zip file
        run: |
          mkdir -p "${{github.workspace}}/tmp"
          cd "${{github.workspace}}/tmp"
          rm -rf ./*
          curl -sLJO "${{ github.event.inputs.blueprint_file_path }}"

      # - name: Set up AWS CLI
      #   uses: aws-actions/configure-aws-credentials@v2
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     aws-region: ap-south-1


      # - name: Create ${{ matrix.type }} Artifacts
      #   working-directory: CMP/${{ matrix.type }}
      #   run: |
      #     shopt -s globstar
      #     mkdir -p "${{github.workspace}}/tmp"
      #     for file in **/*.zip; do
      #       echo "Moving $file"
      #       BASENAME=$(basename "$file")
      #       mv "$file" "${{ github.workspace }}/tmp/$BASENAME"
      #     done


      # - name: Unzip the provided file
      #   working-directory: tmp
      #   run: |
      #     echo "Unzipping File: ${{ github.event.inputs.blueprint_file_path }}"
      #     unzip -o "$(basename "${{ github.event.inputs.blueprint_file_path }}")"

      - name: List the files
        working-directory: tmp
        run: |
          echo "Listing Files in tmp folder "
          pwd
          ls
          tree

      - name: Create a single tar of all the files in the current directory
        working-directory: tmp
        run: |
          WORKING_DIRECTORY=$(pwd)
          echo "WORKING_DIRECTORY : ${WORKING_DIRECTORY}"
          echo "Check if the content is present in this directory : ${WORKING_DIRECTORY} "
          if [ -z "$(ls -A $WORKING_DIRECTORY)" ]; then
            echo "Directory does not exist."
          else
            echo "Creating a tar of all the files in the current directory"
            tar -cvzf "${{ github.event.inputs.content_type }}".tar.gz *.zip
          fi

      - uses: actions/upload-artifact@v3
        with:
          name: ${{ github.event.inputs.content_type }}
          path: |
            **/${{ github.event.inputs.content_type }}.tar.gz

      - name: print Files tree
        run: |
          sudo apt-get install tree -y
          echo "Current directory"
          pwd
          ls
          tree


      # - name: Process JSON files
      #   working-directory: tmp
      #   run: |
      #     for json_file in $(find . -type f -name '*.json'); do
      #       echo "Processing JSON file: $json_file"
      #       name=$(jq -r '.name' "$json_file")
      #       echo "Blueprint Name: ${name}"
      #     done
      
      # - name: List Zip Files
      #   working-directory: tmp
      #   run: |
      #     # Use find to locate all files with a '.zip' extension in the current directory
      #     zip_files=$(find . -maxdepth 1 -type f -name '*.zip')

      #     # Print the list of zip files
      #     echo "List of Zip Files:"
      #     echo "$zip_files"

    
      # # generate a random workflow identifier for CB python script to use
      # - name: Printing Inputes provided by User
      #   run: |
      #     echo "Version: ${{ github.event.inputs.version }}"
      #     echo "Blueprint File Path: ${{ github.event.inputs.blueprint_file_path }}"

        